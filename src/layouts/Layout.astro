---
import { Image } from "astro:assets";
import "../styles/global.css";

const { title } = Astro.props;
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" />
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&family=Roboto:wght@400;700&display=swap"
      rel="stylesheet"
    />

    <title>Triz Jordan - {title}</title>

    <script>
      import "../js/parallax.js";
      import "../js/animations.js";
    </script>
  </head>

  <body class="bg-gray-50 text-zinc-800 font-sans">
    <header class="sticky top-0 w-full z-20 flex justify-center">
      <nav class="w-full flex justify-center p-4 backdrop-blur-lg bg-white/80">
        <div class="w-full max-w-7xl flex items-center justify-between">
          <a href="/" class="md:hidden">
            <Image alt={"Logo"} src={"/Logo.png"} width={40} height={40} />
          </a>

          <div
            class="hidden md:flex flex-1 items-center justify-center gap-x-10"
          >
            <a
              href="/"
              class="text-md uppercase tracking-widest text-zinc-500 hover:text-secondary transition-colors"
              >Inicio</a
            >
            <a
              href="/obras"
              class="text-md uppercase tracking-widest text-zinc-500 hover:text-secondary transition-colors"
              >Obras</a
            >
            <a href="/" class="self-center">
              <Image alt={"Logo"} src={"/Logo.png"} width={100} height={100} />
            </a>
            <a
              href="/sobre-mi"
              class="text-md uppercase tracking-widest text-zinc-500 hover:text-secondary transition-colors"
              >Sobre Mí</a
            >
            <a
              href="/contacto"
              class="text-md uppercase tracking-widest text-zinc-500 hover:text-secondary transition-colors"
              >Contacto</a
            >
          </div>

          <div class="md:hidden">
            <button
              id="menu-btn"
              data-menu-button
              class="text-zinc-500 focus:outline-none focus:ring-2 focus:ring-secondary rounded"
              aria-controls="mobile-menu"
              aria-expanded="false"
            >
              <span class="sr-only">Abrir menú principal</span>
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16m-7 6h7"></path>
              </svg>
            </button>
          </div>
        </div>
      </nav>

      <div
        id="mobile-menu"
        data-mobile-menu
        class="absolute top-20 w-full hidden"
      >
        <div
          class="flex flex-col items-center py-8 space-y-6 bg-white drop-shadow-md mx-4 rounded-xl"
        >
          <a href="/" class="text-zinc-500 hover:text-secondary">Inicio</a>
          <a href="/obras" class="text-zinc-500 hover:text-secondary">Obras</a>
          <a href="/sobre-mi" class="text-zinc-500 hover:text-secondary"
            >Sobre Mí</a
          >
          <a href="/contacto" class="text-zinc-500 hover:text-secondary"
            >Contacto</a
          >
        </div>
      </div>
    </header>

    <main class="pt-2">
      <slot />
    </main>

    <footer class="text-center p-8 text-zinc-500 bg-grey-50">
      <p>&copy; 2025 Triz Jordan</p>
    </footer>

    <script is:inline>
      const menuButton = document.querySelector("[data-menu-button]");
      const mobileMenu = document.querySelector("[data-mobile-menu]");

      if (menuButton && mobileMenu) {
        menuButton.addEventListener("click", () => {
          mobileMenu.classList.toggle("hidden");
          const isExpanded =
            menuButton.getAttribute("aria-expanded") === "true";
          menuButton.setAttribute("aria-expanded", !isExpanded);
        });
      }
    </script>
  </body>
</html>
